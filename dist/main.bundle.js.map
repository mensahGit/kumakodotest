{"version":3,"sources":["/Users/mensah/Desktop/kumakodotest.io/src async","/Users/mensah/Desktop/kumakodotest.io/src/app/app.component.css","/Users/mensah/Desktop/kumakodotest.io/src/app/app.component.html","/Users/mensah/Desktop/kumakodotest.io/src/app/app.component.ts","/Users/mensah/Desktop/kumakodotest.io/src/app/app.module.ts","/Users/mensah/Desktop/kumakodotest.io/src/app/index.ts","/Users/mensah/Desktop/kumakodotest.io/src/app/services/firebase.service.ts","/Users/mensah/Desktop/kumakodotest.io/src/environments/environment.ts","/Users/mensah/Desktop/kumakodotest.io/src/main.ts","/Users/mensah/Desktop/kumakodotest.io/src/polyfills.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,8D;;;;;;;ACNA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,4rBAA4rB,eAAe,KAAK,eAAe,q6BAAq6B,eAAe,KAAK,eAAe,2mFAA2mF,eAAe,KAAK,eAAe,ypFAAypF,kBAAkB,gCAAgC,mBAAmB,wCAAwC,4BAA4B,iBAAiB,sBAAsB,oJAAoJ,gBAAgB,gCAAgC,gBAAgB,iCAAiC,yBAAyB,+BAA+B,eAAe,gCAAgC,gBAAgB,kCAAkC,kBAAkB,ocAAoc,kBAAkB,yBAAyB,mBAAmB,yBAAyB,gBAAgB,6a;;;;;;;;;;;;;;;;;;;;ACAxhQ;AACW;AAY5D,IAAa,YAAY;IAiBvB,sBAAoB,gBAAgC;QAAhC,qBAAgB,GAAhB,gBAAgB,CAAgB;IAEpD,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,oBAAU;YACxD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,oBAAU;YACxD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAW,GAAX,UAAY,KAAK,EAAE,GAAG;QACpB,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAC,KAAK,CAAC,CAAC;QACzC,EAAE,EAAC,GAAG,CAAC,EAAC;YACN,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAC,GAAG,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,qCAAc,GAAd,UAAe,QAAQ;QAAvB,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,oBAAU;YAChE,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAW,GAAX,UACE,OAAc,EACd,QAAe,EACf,iBAAwB,EACxB,WAAkB,EAClB,KAAY,EACZ,KAAY,EACZ,cAAqB,EACrB,IAAW,EACX,KAAY,EACZ,OAAc;QACZ,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAEvC,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,QAAQ;YAClB,iBAAiB,EAAC,iBAAiB;YACnC,WAAW,EAAC,WAAW;YACvB,KAAK,EAAC,KAAK;YACX,KAAK,EAAC,KAAK;YACX,cAAc,EAAE,cAAc;YAC9B,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO;YAChB,UAAU,EAAC,UAAU;SACtB;QAED,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAEzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAEC,+BAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa,GAAY,QAAQ,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAW,QAAQ,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,qBAAqB,GAAI,QAAQ,CAAC,iBAAiB,CAAC;QACzD,IAAI,CAAC,iBAAiB,GAAQ,QAAQ,CAAC,WAAW,CAAC;QACnD,IAAI,CAAC,WAAW,GAAc,QAAQ,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAc,QAAQ,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,mBAAmB,GAAM,QAAQ,CAAC,cAAc,CAAC;QACtD,IAAI,CAAC,UAAU,GAAe,QAAQ,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAc,QAAQ,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAY,QAAQ,CAAC,OAAO,CAAC;IACjD,CAAC;IAED,qCAAc,GAAd;QACI,IAAI,WAAW,GAAG;YAClB,OAAO,EAAC,IAAI,CAAC,aAAa;YAC1B,QAAQ,EAAC,IAAI,CAAC,cAAc;YAC5B,iBAAiB,EAAC,IAAI,CAAC,qBAAqB;YAC5C,WAAW,EAAC,IAAI,CAAC,iBAAiB;YAClC,KAAK,EAAC,IAAI,CAAC,WAAW;YACtB,KAAK,EAAC,IAAI,CAAC,WAAW;YACtB,cAAc,EAAE,IAAI,CAAC,mBAAmB;YACxC,IAAI,EAAE,IAAI,CAAC,UAAU;YACrB,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,OAAO,EAAE,IAAI,CAAC,aAAa;SAC5B;QAED,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAElE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,qCAAc,GAAd,UAAe,GAAG;QAChB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAE1C,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IACL,mBAAC;AAAD,CAAC;AAtHY,YAAY;IANxB,wFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;QAClC,SAAS,EAAE,CAAC,mFAAe,CAAC;KAC7B,CAAC;yDAkBqC,mFAAe,oBAAf,mFAAe;GAjBzC,YAAY,CAsHxB;AAtHwB;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACjB;AACI;AACF;AACM;AACiB;AAEnB;AAE/C,yBAAyB;AAClB,IAAM,cAAc,GAAG;IAC5B,MAAM,EAAE,yCAAyC;IAC/C,UAAU,EAAE,wCAAwC;IACpD,WAAW,EAAE,+CAA+C;IAC5D,SAAS,EAAE,wBAAwB;IACnC,aAAa,EAAE,oCAAoC;IACnD,iBAAiB,EAAE,cAAc;CACpC,CAAC;AAgBF,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAdrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,iEAAU;YACV,uEAAiB,CAAC,aAAa,CAAC,cAAc,CAAC;YAC/C,wFAAyB;SAC1B;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;ACjCU;AACH;;;;;;;;;;;;;;;;;;;;;;;ACDY;AAG2C;AACrD;AAK/B,IAAa,eAAe;IAIxB,yBAAoB,GAAwB;QAAxB,QAAG,GAAH,GAAG,CAAqB;IAE5C,CAAC;IAED,uCAAa,GAAb,UAAc,QAAsB;QAAtB,0CAAsB;QAChC,EAAE,EAAC,QAAQ,IAAI,IAAI,CAAC,EAAC;YACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE;gBAC3C,KAAK,EAAE;oBACH,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,QAAQ;iBACpB;aACJ,CACiC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CACX;QACtC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,uCAAa,GAAb;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CACX;QAClC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,qCAAW,GAAX,UAAY,WAAW;QACnB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,wCAAc,GAAd,UAAe,GAAG,EAAE,WAAW;QAC3B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IACpD,CAAC;IAED,wCAAc,GAAd,UAAe,GAAG;QACd,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAGL,sBAAC;AAAD,CAAC;AA5CY,eAAe;IAD3B,wFAAU,EAAE;yDAKgB,kFAAmB,oBAAnB,kFAAmB;GAJnC,eAAe,CA4C3B;AA5C2B;;;;;;;;;;ACT5B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAE/E,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;ACPsB;AAEmD;AAC5B;AACU;AACtB;AAEnC,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,wDAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXpD;AAAA;AAAA,wEAAwE;AACxE,8DAA8D;AAClC;AACA;AACE;AACC;AACE;AACL;AACF;AACE;AACF;AACC;AACC;AACH;AACA;AACI;AAEA;AACF","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mensah/Desktop/kumakodotest.io/src async\n// module id = ../../../../../src async recursive\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mensah/Desktop/kumakodotest.io/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"top-bar\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"top-bar-left\\\">\\n      <ul class=\\\"menu\\\">\\n        <li class=\\\"menu-text\\\">BusinessContacts</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"top-bar-right\\\">\\n\\n    </div>\\n  </div>\\n</div>\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-6 columns\\\">\\n    <button (click)=\\\"changeState('add')\\\" class=\\\"button\\\">Add Business</button>\\n  </div>\\n  <div class=\\\"large-6 columns\\\">\\n    <label> Filter Category\\n        <select (change)=\\\"filterCategory(filteredCategory.value)\\\" #filteredCategory>\\n            <option value=\\\"0\\\">Select</option>\\n            <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.name}}\\\">{{category.name}}</option>\\n        </select>\\n    </label>\\n  </div>\\n</div>\\n\\n<!-- ADD FORM -->\\n<div *ngIf=\\\"appState == 'add'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Add Business</h3>\\n    <form (submit)=\\\"addBusiness(\\n        company.value,\\n        category.value,\\n        years_in_business.value,\\n        description.value,\\n        phone.value,\\n        email.value,\\n        street_address.value,\\n        city.value,\\n        state.value,\\n        zipcode.value)\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-6 columns\\\">\\n            <label> Company\\n              <input type=\\\"text\\\" placeholder=\\\"Company Name\\\" #company>\\n            </label>\\n          </div>\\n          <div class=\\\"large-6 columns\\\">\\n            <label>Category\\n              <select #category>\\n                <option value=\\\"0\\\">Select</option>\\n                <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.name}}\\\">{{category.name}}</option>\\n              </select>\\n             </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Years In Business\\n              <input type=\\\"text\\\" placeholder=\\\"Years In Business\\\" #years_in_business>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Description\\n               <textarea #description></textarea>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Phone\\n              <input type=\\\"text\\\" placeholder=\\\"Phone\\\" #phone>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Email\\n              <input type=\\\"text\\\" placeholder=\\\"Email\\\" #email>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Street Address\\n              <input type=\\\"text\\\" placeholder=\\\"Street Address\\\" #street_address>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>City\\n              <input type=\\\"text\\\" placeholder=\\\"City\\\" #city>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>State\\n              <input type=\\\"text\\\" placeholder=\\\"State\\\" #state>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Zipcode\\n              <input type=\\\"text\\\" placeholder=\\\"Zipcode\\\" #zipcode>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">\\n          </div>\\n        </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<!-- EDIT FORM -->\\n<div *ngIf=\\\"appState == 'edit'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Edit Business</h3>\\n    <form (submit)=\\\"updateBusiness()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-6 columns\\\">\\n            <label> Company\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"activeCompany\\\" name=\\\"activeCompany\\\" placeholder=\\\"Company Name\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"large-6 columns\\\">\\n            <label>Category\\n              <select [(ngModel)]=\\\"activeCategory\\\" name=\\\"activeCategory\\\">\\n                <option value=\\\"0\\\">Select</option>\\n                <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.name}}\\\">{{category.name}}</option>\\n              </select>\\n             </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Years In Business\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"activeYearsInBusiness\\\" name=\\\"activeYearsInBusiness\\\" placeholder=\\\"Years In Business\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Description\\n               <textarea [(ngModel)]=\\\"activeDescription\\\" name=\\\"activeDescription\\\"></textarea>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Phone\\n              <input type=\\\"text\\\" placeholder=\\\"Phone\\\" [(ngModel)]=\\\"activePhone\\\" name=\\\"activePhone\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Email\\n              <input type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"activeEmail\\\" name=\\\"activeEmail\\\">\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Street Address\\n              <input type=\\\"text\\\" placeholder=\\\"Street Address\\\" [(ngModel)]=\\\"activeStreetAddress\\\" name=\\\"activeStreetAddress\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>City\\n              <input type=\\\"text\\\" placeholder=\\\"City\\\" [(ngModel)]=\\\"activeCity\\\" name=\\\"activeCity\\\">\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>State\\n              <input type=\\\"text\\\" placeholder=\\\"State\\\" [(ngModel)]=\\\"activeState\\\" name=\\\"activeState\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Zipcode\\n              <input type=\\\"text\\\" placeholder=\\\"Zipcode\\\" [(ngModel)]=\\\"activeZipcode\\\" name=\\\"activeZipcode\\\">\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">\\n          </div>\\n        </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"appState == 'extend'\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n      <button (click)=\\\"changeState('default')\\\" class=\\\"button alert\\\">Go Back</button>\\n    </div>\\n  </div>\\n\\n\\n<div *ngFor=\\\"let business of businesses\\\">\\n  <div *ngIf=\\\"business.$key == activeKey\\\">\\n     <div class=\\\"row\\\">\\n      <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h3>{{business.company}}</h3>\\n          <p>Category: {{business.category}}</p>\\n          <p>Years In Business: {{business.years_in_business}}\\n          <p>{{business.description}}</p>\\n      </div>\\n      <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h4>Contact Info</h4>\\n          <ul>\\n            <li>Phone: {{business.phone}}</li>\\n            <li>Email: {{business.email}}</li>\\n            <li>Street: {{business.street_address}}</li>\\n            <li>City: {{business.city}}</li>\\n            <li>State: {{business.state}}</li>\\n            <li>Zipcode: {{business.zipcode}}</li>\\n          </ul>\\n      </div>\\n     </div>\\n  </div>\\n</div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <div *ngIf=\\\"businesses\\\">\\n      <table>\\n        <thead>\\n          <tr>\\n            <th>Company</th>\\n            <th>Category</th>\\n            <th>Phone</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let business of businesses\\\">\\n            <td>{{business.company}}</td>\\n            <td>{{business.category}}</td>\\n            <td>{{business.phone}}</td>\\n            <td>\\n              <button (click)=\\\"changeState('extend', business.$key)\\\" class=\\\"button\\\">More</button>\\n              <button (click)=\\\"showEdit(business)\\\" class=\\\"button secondary\\\">Edit</button>\\n              <button (click)=\\\"deleteBusiness(business.$key)\\\" class=\\\"button alert\\\">Delete</button>\\n             </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mensah/Desktop/kumakodotest.io/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 0","import { Component,OnInit } from '@angular/core';\nimport {FirebaseService} from './services/firebase.service';\nimport {Business} from './Business';\nimport {Category} from './Category';\n\nimport { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [FirebaseService]\n})\nexport class AppComponent implements OnInit{\n  businesses:Business[];\n  categories:Category[];\n  appState: string;\n  activeKey: string;\n\n  activeCompany:string;\n  activeCategory:string;\n  activeYearsInBusiness:string;\n  activeDescription:string;\n  activePhone:string;\n  activeEmail:string;\n  activeStreetAddress:string;\n  activeCity:string;\n  activeState:string;\n  activeZipcode:string;\n\n  constructor(private _firebaseService:FirebaseService) {\n\n  }\n\n  ngOnInit(){\n    this._firebaseService.getBusinesses().subscribe(businesses => {\n      this.businesses = businesses;\n    });\n\n    this._firebaseService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n\n  changeState(state, key){\n    console.log('Changing state to: '+state);\n    if(key){\n      console.log('Changing key to: '+key);\n      this.activeKey = key;\n    }\n    this.appState = state;\n  }\n\n  filterCategory(category){\n    this._firebaseService.getBusinesses(category).subscribe(businesses => {\n      this.businesses = businesses;\n    });\n  }\n\n  addBusiness(\n    company:string,\n    category:string,\n    years_in_business:number,\n    description:string,\n    phone:string,\n    email:string,\n    street_address:string,\n    city:string,\n    state:string,\n    zipcode:string){\n      var created_at = new Date().toString();\n\n      var newBusiness = {\n        company: company,\n        category: category,\n        years_in_business:years_in_business,\n        description:description,\n        phone:phone,\n        email:email,\n        street_address: street_address,\n        city: city,\n        state: state,\n        zipcode: zipcode,\n        created_at:created_at\n      }\n\n      console.log(newBusiness);\n\n      this._firebaseService.addBusiness(newBusiness);\n\n      this.changeState('default', null);\n  }\n\n    showEdit(business){\n      this.changeState('edit', business.$key);\n      this.activeCompany =          business.company;\n      this.activeCategory =         business.category;\n      this.activeYearsInBusiness =  business.years_in_business;\n      this.activeDescription =      business.description;\n      this.activePhone =            business.phone;\n      this.activeEmail =            business.email;\n      this.activeStreetAddress =    business.street_address;\n      this.activeCity =             business.city;\n      this.activeState =            business.state;\n      this.activeZipcode =          business.zipcode;\n    }\n\n    updateBusiness(){\n        var updBusiness = {\n        company:this.activeCompany,\n        category:this.activeCategory,\n        years_in_business:this.activeYearsInBusiness,\n        description:this.activeDescription,\n        phone:this.activePhone,\n        email:this.activeEmail,\n        street_address: this.activeStreetAddress,\n        city: this.activeCity,\n        state: this.activeState,\n        zipcode: this.activeZipcode\n      }\n\n      this._firebaseService.updateBusiness(this.activeKey, updBusiness);\n\n      this.changeState('default', null);\n    }\n\n    deleteBusiness(key){\n      this._firebaseService.deleteBusiness(key);\n\n      this.changeState('default', null);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\n\n// Must export the config\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyDIyrzKId0MMeBq2IcRsJ6w3XP5Db4qaFI\",\n    authDomain: \"businesscontacts-f9be7.firebaseapp.com\",\n    databaseURL: \"https://businesscontacts-f9be7.firebaseio.com\",\n    projectId: \"businesscontacts-f9be7\",\n    storageBucket: \"businesscontacts-f9be7.appspot.com\",\n    messagingSenderId: \"453638685094\"\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireDatabaseModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/app/app.module.ts","export * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/app/index.ts","import {Injectable} from '@angular/core';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';\r\nimport 'rxjs/add/operator/map';\r\nimport {Business} from '../Business';\r\nimport {Category} from '../Category';\r\n\r\n@Injectable()\r\nexport class FirebaseService{\r\n    businesses: FirebaseListObservable<Business[]>;\r\n    categories: FirebaseListObservable<Category[]>;\r\n\r\n    constructor(private _af: AngularFireDatabase){\r\n\r\n    }\r\n\r\n    getBusinesses(category:string = null){\r\n        if(category != null){\r\n            this.businesses = this._af.list('/businesses', {\r\n                query: {\r\n                    orderByChild: 'category',\r\n                    equalTo: category\r\n                }\r\n            }) as\r\n            FirebaseListObservable<Business[]>\r\n        } else {\r\n            this.businesses = this._af.list('/businesses') as\r\n            FirebaseListObservable<Business[]>\r\n        }\r\n\r\n        return this.businesses;\r\n    }\r\n\r\n    getCategories(){\r\n        this.categories = this._af.list('/categories') as\r\n        FirebaseListObservable<Category[]>\r\n        return this.categories;\r\n    }\r\n\r\n    addBusiness(newBusiness){\r\n        return this.businesses.push(newBusiness);\r\n    }\r\n\r\n    updateBusiness(key, updBusiness){\r\n        return this.businesses.update(key, updBusiness);\r\n    }\r\n\r\n    deleteBusiness(key){\r\n        return this.businesses.remove(key);\r\n    }\r\n\r\n    \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/app/services/firebase.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/environments/environment.ts","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/main.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// /Users/mensah/Desktop/kumakodotest.io/src/polyfills.ts"],"sourceRoot":"webpack:///"}